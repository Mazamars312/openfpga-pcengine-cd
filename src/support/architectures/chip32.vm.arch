// Analogue CHIP32 VM
#endian lsb

#directive db 1
#directive dw 2
#directive dl 4
#directive dd 4
#directive dq 8

nop                     ;$00 $00

ld.b r*04,(r0)          ;%0000 =a $32
ld.b r*04,(r1)          ;%0001 =a $32
ld.b r*04,(r2)          ;%0010 =a $32
ld.b r*04,(r3)          ;%0011 =a $32
ld.b r*04,(r4)          ;%0100 =a $32
ld.b r*04,(r5)          ;%0101 =a $32
ld.b r*04,(r6)          ;%0110 =a $32
ld.b r*04,(r7)          ;%0111 =a $32
ld.b r*04,(r8)          ;%1000 =a $32
ld.b r*04,(r9)          ;%1001 =a $32
ld.b r*04,(r10)         ;%1010 =a $32
ld.b r*04,(r11)         ;%1011 =a $32
ld.b r*04,(r12)         ;%1100 =a $32
ld.b r*04,(r13)         ;%1101 =a $32
ld.b r*04,(r14)         ;%1110 =a $32
ld.b r*04,(r15)         ;%1111 =a $32

ld.b (r0),r*04          ;%0000 =a $33
ld.b (r1),r*04          ;%0001 =a $33
ld.b (r2),r*04          ;%0010 =a $33
ld.b (r3),r*04          ;%0011 =a $33
ld.b (r4),r*04          ;%0100 =a $33
ld.b (r5),r*04          ;%0101 =a $33
ld.b (r6),r*04          ;%0110 =a $33
ld.b (r7),r*04          ;%0111 =a $33
ld.b (r8),r*04          ;%1000 =a $33
ld.b (r9),r*04          ;%1001 =a $33
ld.b (r10),r*04         ;%1010 =a $33
ld.b (r11),r*04         ;%1011 =a $33
ld.b (r12),r*04         ;%1100 =a $33
ld.b (r13),r*04         ;%1101 =a $33
ld.b (r14),r*04         ;%1110 =a $33
ld.b (r15),r*04         ;%1111 =a $33

ld.w r*04,(r0)          ;%0000 =a $34
ld.w r*04,(r1)          ;%0001 =a $34
ld.w r*04,(r2)          ;%0010 =a $34
ld.w r*04,(r3)          ;%0011 =a $34
ld.w r*04,(r4)          ;%0100 =a $34
ld.w r*04,(r5)          ;%0101 =a $34
ld.w r*04,(r6)          ;%0110 =a $34
ld.w r*04,(r7)          ;%0111 =a $34
ld.w r*04,(r8)          ;%1000 =a $34
ld.w r*04,(r9)          ;%1001 =a $34
ld.w r*04,(r10)         ;%1010 =a $34
ld.w r*04,(r11)         ;%1011 =a $34
ld.w r*04,(r12)         ;%1100 =a $34
ld.w r*04,(r13)         ;%1101 =a $34
ld.w r*04,(r14)         ;%1110 =a $34
ld.w r*04,(r15)         ;%1111 =a $34

ld.w (r0),r*04          ;%0000 =a $35
ld.w (r1),r*04          ;%0001 =a $35
ld.w (r2),r*04          ;%0010 =a $35
ld.w (r3),r*04          ;%0011 =a $35
ld.w (r4),r*04          ;%0100 =a $35
ld.w (r5),r*04          ;%0101 =a $35
ld.w (r6),r*04          ;%0110 =a $35
ld.w (r7),r*04          ;%0111 =a $35
ld.w (r8),r*04          ;%1000 =a $35
ld.w (r9),r*04          ;%1001 =a $35
ld.w (r10),r*04         ;%1010 =a $35
ld.w (r11),r*04         ;%1011 =a $35
ld.w (r12),r*04         ;%1100 =a $35
ld.w (r13),r*04         ;%1101 =a $35
ld.w (r14),r*04         ;%1110 =a $35
ld.w (r15),r*04         ;%1111 =a $35

ld.l r*04,(r0)          ;%0000 =a $36
ld.l r*04,(r1)          ;%0001 =a $36
ld.l r*04,(r2)          ;%0010 =a $36
ld.l r*04,(r3)          ;%0011 =a $36
ld.l r*04,(r4)          ;%0100 =a $36
ld.l r*04,(r5)          ;%0101 =a $36
ld.l r*04,(r6)          ;%0110 =a $36
ld.l r*04,(r7)          ;%0111 =a $36
ld.l r*04,(r8)          ;%1000 =a $36
ld.l r*04,(r9)          ;%1001 =a $36
ld.l r*04,(r10)         ;%1010 =a $36
ld.l r*04,(r11)         ;%1011 =a $36
ld.l r*04,(r12)         ;%1100 =a $36
ld.l r*04,(r13)         ;%1101 =a $36
ld.l r*04,(r14)         ;%1110 =a $36
ld.l r*04,(r15)         ;%1111 =a $36

ld.l (r0),r*04          ;%0000 =a $37
ld.l (r1),r*04          ;%0001 =a $37
ld.l (r2),r*04          ;%0010 =a $37
ld.l (r3),r*04          ;%0011 =a $37
ld.l (r4),r*04          ;%0100 =a $37
ld.l (r5),r*04          ;%0101 =a $37
ld.l (r6),r*04          ;%0110 =a $37
ld.l (r7),r*04          ;%0111 =a $37
ld.l (r8),r*04          ;%1000 =a $37
ld.l (r9),r*04          ;%1001 =a $37
ld.l (r10),r*04         ;%1010 =a $37
ld.l (r11),r*04         ;%1011 =a $37
ld.l (r12),r*04         ;%1100 =a $37
ld.l (r13),r*04         ;%1101 =a $37
ld.l (r14),r*04         ;%1110 =a $37
ld.l (r15),r*04         ;%1111 =a $37

ld.b r*04,(*16)         ;%0000 =a $02 =b
ld.b (*16),r*04         ;%0000 =b $03 =a
ld.w r*04,(*16)         ;%0000 =a $04 =b
ld.w (*16),r*04         ;%0000 =b $05 =a
ld.l r*04,(*16)         ;%0000 =a $06 =b
ld.l (*16),r*04         ;%0000 =b $07 =a

mul r*04,r*04           ;=b =a $38
test r*04,r*04          ;=b =a $39
pmpw r*04,r*04          ;=b =a $3a
pmpr r*04,r*04          ;=b =a $3b
pmpbw r*04,r*04         ;=b =a $3c
xfill r*04,r*04         ;=b =a $3d
div r*04,r*04           ;=b =a $3e
rfill r*04,r*04         ;=b =a $3f

ld r*04,#*16            ;%0000 =a $08 =b
and r*04,#*16           ;%0000 =a $09 =b
or r*04,#*16            ;%0000 =a $0a =b
xor r*04,#*16           ;%0000 =a $0b =b
add r*04,#*16           ;%0000 =a $0c =b
sub r*04,#*16           ;%0000 =a $0d =b
cmp r*04,#*16           ;%0000 =a $0e =b
bit r*04,#*16           ;%0000 =a $0f =b

rset #*16               ;$00 $10 ~a >>16a
crc r*04,r*04,r*04,#*16 ;=b =a $11 =d %0000 =c $00
ld r*04,#*16            ;%0000 =a $18 ~b >>16b
and r*04,#*16           ;%0000 =a $19 ~b >>16b
bic r*04,#*16           ;%0000 =a $19 Cb C>>16b
or r*04,#*16            ;%0000 =a $1a ~b >>16b
xor r*04,#*16           ;%0000 =a $1b ~b >>16b
add r*04,#*16           ;%0000 =a $1c ~b >>16b
sub r*04,#*16           ;%0000 =a $1d ~b >>16b
cmp r*04,#*16           ;%0000 =a $1e ~b >>16b
bit r*04,#*16           ;%0000 =a $1f ~b >>16b

asl r*04,r*04           ;=b =a $20
lsr r*04,r*04           ;=b =a $21
rol r*04,r*04           ;=b =a $22
ror r*04,r*04           ;=b =a $23
asl r*04,#*04           ;Db =a $24
lsr r*04,#*04           ;Db =a $25
rol r*04,#*04           ;Db =a $26
ror r*04,#*04           ;Db =a $27
ld r*04,r*04            ;=b =a $28
and r*04,r*04           ;=b =a $29
or r*04,r*04            ;=b =a $2a
xor r*04,r*04           ;=b =a $2b
add r*04,r*04           ;=b =a $2c
sub r*04,r*04           ;=b =a $2d
cmp r*04,r*04           ;=b =a $2e
bit r*04,r*04           ;=b =a $2f

printf r*04             ;%0000 =a $40
hex.b r*04              ;%0000 =a $41
hex.w r*04              ;%0001 =a $41
hex.l r*04              ;%0010 =a $41
dec.b r*04              ;%0011 =a $41
dec.w r*04              ;%0100 =a $41
dec.l r*04              ;%0101 =a $41
ret                     ;$00 $42
ret nz                  ;$01 $42
ret z                   ;$02 $42
ret nc                  ;$03 $42
ret c                   ;$04 $42
push r*04               ;%0000 =a $43
pop r*04                ;%0000 =a $44
err r*04,r*04           ;=b =a $45
exit 0                  ;$00 $46
exit 1                  ;$01 $46
clc                     ;$00 $47
sec                     ;$01 $47
uivisible r*04,r*04     ;=b =a $48
gettime r*04            ;%0000 =a $49

adjfs r*04,r*04         ;=b =a $50
adjfo r*04,r*04         ;=b =a $51
adjlp r*04,r*04         ;=b =a $52
loadf r*04              ;%0000 =a $53
getext r*04,r*04        ;=b =a $54
getname r*04,r*04       ;=b =a $55
open r*04,r*04          ;=b =a $56
close                   ;$00 $57
seek r*04               ;%0000 =a $58
read r*04,r*04          ;=b =a $59
copy r*04,r*04          ;=b =a $5a
core r*04               ;%0000 =a $5b
host r*04,r*04          ;=b =a $5c
queryslot r*04          ;%0000 =a $5d

jp nz,*04               ;>>05a >>01a %0111 >>09a
jp z,*04                ;>>05a >>01a %1000 >>09a
jp nc,*04               ;>>05a >>01a %1001 >>09a
jp c,*04                ;>>05a >>01a %1010 >>09a
jp *04                  ;>>05a >>01a %0110 >>09a
call nz,*04             ;>>05a >>01a %1100 >>09a
call z,*04              ;>>05a >>01a %1101 >>09a
call nc,*04             ;>>05a >>01a %1110 >>09a
call c,*04              ;>>05a >>01a %1111 >>09a
call *04                ;>>05a >>01a %1011 >>09a